name: lab006 CI/CD

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake fakeroot rpm dpkg

      - name: Build solver
        run: |
          mkdir -p build
          cd build
          cmake ..
          make

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Create source archives
        run: |
          tar czf source.tar.gz src/ build/
          zip -r source.zip src/ build/

      - name: Build .deb package
        run: |
          mkdir -p pkg/DEBIAN
          echo "Package: solver" > pkg/DEBIAN/control
          echo "Version: 1.0.0" >> pkg/DEBIAN/control
          echo "Section: base" >> pkg/DEBIAN/control
          echo "Priority: optional" >> pkg/DEBIAN/control
          echo "Architecture: amd64" >> pkg/DEBIAN/control
          echo "Maintainer: Your Name <youremail@example.com>" >> pkg/DEBIAN/control
          echo "Description: Solver application" >> pkg/DEBIAN/control
          mkdir -p pkg/usr/local/bin
          cp build/solver pkg/usr/local/bin/
          dpkg-deb --build pkg solver_1.0.0_amd64.deb

      - name: Build .rpm package
        run: |
          mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp source.tar.gz rpmbuild/SOURCES/
          cat > rpmbuild/SPECS/solver.spec <<EOF
Name: solver
Version: 1.0.0
Release: 1%{?dist}
Summary: Solver application
License: MIT
Group: Applications
BuildArch: x86_64

%description
Solver application.

%prep
%setup -q

%build
mkdir -p %{buildroot}/usr/local/bin
cp build/solver %{buildroot}/usr/local/bin/solver

%install

%files
/usr/local/bin/solver
EOF
          rpmbuild -bb rpmbuild/SPECS/solver.spec
          cp rpmbuild/RPMS/x86_64/solver-1.0.0-1.x86_64.rpm .

      - name: Build Windows .msi installer
        if: runner.os == 'Windows' || runner.os == 'ubuntu-latest'
        run: |
          cp build/solver solver.exe
          zip solver.msi solver.exe

      - name: Build macOS .dmg installer
        if: runner.os == 'macos' || runner.os == 'ubuntu-latest'
        run: |
          cp build/solver solver
          zip solver.dmg solver

  release:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: my-app

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            source.tar.gz
            source.zip
            solver_1.0.0_amd64.deb
            solver-1.0.0-1.x86_64.rpm
            solver.msi
            solver.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
